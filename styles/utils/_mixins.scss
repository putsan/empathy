@mixin size($_width, $_height: $_width) {
  width: $_width;
  height: $_height;
}

@mixin line-styles(
  $_space,
  $_color,
  $_absolute: false,
  $_top: initial,
  $_right: initial,
  $_bottom: initial,
  $_left: initial
) {
  @if $_absolute {
    position: absolute;
    top: $_top;
    right: $_right;
    bottom: $_bottom;
    left: $_left;
  }

  content: "";
  display: block;
  margin: $_space 0;

  border-bottom: 1px solid $_color;
}

@mixin line($_space: 14px, $_color: $gray, $_before: false) {
  @if $_before {
    &::before {
      @include line-styles($_space, $_color);
    }
  } @else {
    &::after {
      @include line-styles($_space, $_color);
    }
  }
}

@mixin line-absolute(
  $_top: initial,
  $_right: 0,
  $_bottom: 0,
  $_left: 0,
  $_color: $gray
) {
  position: relative;

  &::after {
    @include line-styles(0, $_color, true, $_top, $_right, $_bottom, $_left);
  }
}

@mixin text-overflow($_lines-count: initial, $_initial: false) {
  @if $_initial {
    display: initial;
    -webkit-line-clamp: initial;
    -webkit-box-orient: initial;

    text-overflow: initial;

    overflow: hidden;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: #{$_lines-count};
    -webkit-box-orient: vertical;

    text-overflow: ellipsis;

    overflow: hidden;
  }
}

@mixin flexGap(
  $_gap,
  $_direction: row,
  $_element: div,
  $_vertical-gap: $_gap,
  $_columns: 3
) {
  > #{$_element} {
    @if $_direction == row {
      margin: 0 calc($_gap/2);
      &:first-child {
        margin-left: 0;
      }

      &:last-child {
        margin-right: 0;
      }
    }

    @if $_direction == column {
      margin: calc($_gap/2) 0;
      &:first-child {
        margin-top: 0;
      }

      &:last-child {
        margin-bottom: 0;
      }
    }

    @if $_direction == net {
      margin: calc($_vertical-gap/2) calc($_gap/2);

      &:nth-child(-n + #{$_columns}) {
        margin-top: 0;
      }

      &:nth-last-child(-n + #{$_columns}) {
        margin-bottom: 0;
      }

      &:nth-child(#{$_columns}n + 1) {
        margin-left: 0;
      }

      &:nth-child(#{$_columns}n + #{$_columns}) {
        margin-right: 0;
      }
    }
  }
}

@mixin flex-centering(
  $_direction: row,
  $_justify: initial,
  $_align-it: center
) {
  display: flex;
  flex-direction: $_direction;
  justify-content: $_justify;
  align-items: $_align-it;
}

@mixin input-style($_height: 41px, $_padding: 0) {
  width: 100%;
  height: $_height;
  padding: $_padding;

  font-family: "Mont";
  font-style: normal;
  font-weight: 300;
  font-size: 14px;
  line-height: 24px;
  color: $background-color;

  background: none;

  &::placeholder {
    font-family: "Mont";
    font-style: normal;
    font-weight: 300;
    font-size: 14px;
    line-height: 24px;
    color: $background-color;

    opacity: 0.7;
  }

  &:focus {
    border-color: $background-color;
    outline: none;
  }

  input:-webkit-autofill,
  input:-webkit-autofill:focus {
    // transition: background-color 600000s 0s, color 600000s 0s;
  }
}



/* End of Used Mixins
-------------------------------------------------- */

@mixin hover($_property, $_toValue) {
  transition: #{$_property} $main-hover-duration;
  &:hover {
    #{$_property}: $_toValue;
  }
}

@mixin active($_property, $_toValue) {
  transition: #{$_property} $main-hover-duration;
  &:active {
    #{$_property}: $_toValue;
  }
}

@mixin paragraph-title($bootom-space) {
  padding-bottom: $bootom-space;

  font-family: "Mark-Heavy", Geneva, Verdana, sans-serif;
  font-size: $card-title-size;
  color: $white;
  text-transform: uppercase;
}

@mixin position($vertical, $horisontal, $type: absolute) {
  position: $type;
  top: $vertical;
  left: $horisontal;
}

@mixin button-font($_size, $_color: $white) {
  font-family: inherit;
  font-size: #{$_size};
  color: #{$_color};
}
